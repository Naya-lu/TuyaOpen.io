"use strict";(self.webpackChunktuyaopen_io_website=self.webpackChunktuyaopen_io_website||[]).push([[7800],{2902:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"quick_start/cli-flash","title":"cli-flash","description":"################ Command Line Flashing Guide ############################","source":"@site/i18n/zh/docusaurus-plugin-content-docs/current/quick_start/cli-flash.md","sourceDirName":"quick_start","slug":"/quick_start/cli-flash","permalink":"/docs/quick_start/cli-flash","draft":false,"unlisted":false,"editUrl":"https://github.com/tuya/TuyaOpen/edit/master/i18n/zh/docusaurus-plugin-content-docs/current/quick_start/cli-flash.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"TuyaOpen Overview","permalink":"/docs/"},"next":{"title":"gui-flash","permalink":"/docs/quick_start/gui-flash"}}');var i=s(4848),o=s(8453);const r={},l="Firmware Flashing Module",a={},c=[{value:"cd apps/tuya_cloud/switch_demo\ntos flash\ntyutool params:\n[INFO]: tyut_logger init done.\n[INFO]: Run Tuya Uart Tool.\n[INFO]: Use default baudrate: [921600]\n[INFO]: Use default start address: [0x00]",id:"cd-appstuya_cloudswitch_demotos-flashtyutool-paramsinfo-tyut_logger-init-doneinfo-run-tuya-uart-toolinfo-use-default-baudrate-921600info-use-default-start-address-0x00",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:"############################ Command Line Flashing Guide ############################"}),"\n",(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"firmware-flashing-module",children:"Firmware Flashing Module"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"On Linux systems, first set serial port permissions with the following command to avoid errors:"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:".. code-block:: bash"}),"\n",(0,i.jsx)(e.p,{children:"sudo usermod -aG dialout $USER"}),"\n",(0,i.jsx)(e.p,{children:".. note:: System reboot required after configuration."}),"\n",(0,i.jsxs)(e.ol,{start:"2",children:["\n",(0,i.jsxs)(e.li,{children:["Run ",(0,i.jsx)(e.code,{children:"tos flash"})," command in compiled project directory for one-click flashing. The command automatically downloads tyutool and performs flashing:"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:".. code-block:: bash"}),"\n",(0,i.jsx)(e.h2,{id:"cd-appstuya_cloudswitch_demotos-flashtyutool-paramsinfo-tyut_logger-init-doneinfo-run-tuya-uart-toolinfo-use-default-baudrate-921600info-use-default-start-address-0x00",children:"cd apps/tuya_cloud/switch_demo\ntos flash\ntyutool params:\n[INFO]: tyut_logger init done.\n[INFO]: Run Tuya Uart Tool.\n[INFO]: Use default baudrate: [921600]\n[INFO]: Use default start address: [0x00]"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"/dev/ttyS0"}),"\n",(0,i.jsx)(e.li,{children:"/dev/ttyACM0"}),"\n",(0,i.jsx)(e.li,{children:"/dev/ttyACM1\n^^^^^^^^^^^^^^^^^^^^\nSelect serial port: 3\n[INFO]: Waiting Reset ...\n[INFO]: unprotect flash OK.\n[INFO]: sync baudrate 921600 success\nErasing: \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100% 4 bytes/s   0:00:04 / 0:00:00\n[INFO]: Erase flash success\nWriting: \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100% 16 bytes/s   0:00:18 / 0:00:00\n[INFO]: Write flash success\n[INFO]: CRC check success\n[INFO]: Reboot done\n[INFO]: Flash write success."}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:".. attention:: Chip must enter boot mode before flashing. If serial port is unresponsive, check port selection or potential conflicts."}),"\n",(0,i.jsxs)(e.ol,{start:"3",children:["\n",(0,i.jsx)(e.li,{children:"tos flash tool keeps adding support for new chips. Versions before v1.8.0 require manual upgrades:"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Check version::"}),"\n",(0,i.jsx)(e.p,{children:"tos flash --version"}),"\n",(0,i.jsx)(e.p,{children:"Example output:"}),"\n",(0,i.jsx)(e.p,{children:".. code-block:: bash"}),"\n",(0,i.jsx)(e.p,{children:"tyuTool, version 1.8.3"}),"\n",(0,i.jsx)(e.p,{children:"For versions prior to v1.8.0, manually upgrade with:"}),"\n",(0,i.jsx)(e.p,{children:".. code-block:: bash"}),"\n",(0,i.jsx)(e.p,{children:"tos flash upgrade"}),"\n",(0,i.jsx)(e.h1,{id:"authorization-code-flashing",children:"Authorization Code Flashing"}),"\n",(0,i.jsxs)(e.p,{children:["Use ",(0,i.jsx)(e.code,{children:"tos monitor"})," command to select the log serial port and view device logs in the terminal. Use ",(0,i.jsx)(e.code,{children:"tos monitor -b 115200"})," to select the flashing serial port and perform authorization code burning via serial command line."]}),"\n",(0,i.jsx)(e.p,{children:".. code-block:: bash"}),"\n",(0,i.jsx)(e.p,{children:"cd apps/tuya_cloud/switch_demo\ntos monitor -b 115200\ntyutool params:"}),"\n",(0,i.jsx)(e.p,{children:".. list-table:: :header-rows: 1"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Command"}),"\n",(0,i.jsx)(e.li,{children:"Description"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"hello"})}),"\n",(0,i.jsxs)(e.li,{children:["Test command line functionality, return ",(0,i.jsx)(e.code,{children:"hello world"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"auth"})}),"\n",(0,i.jsx)(e.li,{children:"Initiate authorization code flashing"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.code,{children:"auth-read"})}),"\n",(0,i.jsx)(e.li,{children:"Read authorization code"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Send commands via serial console for authorization:"}),"\n",(0,i.jsx)(e.p,{children:".. code-block:: bash"}),"\n",(0,i.jsx)(e.p,{children:"auth uuidxxxxxxxxxxxxxxxx keyxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}),"\n",(0,i.jsx)(e.p,{children:".. note:: Press Enter after typing command before clicking Send button."})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>r,x:()=>l});var t=s(6540);const i={},o=t.createContext(i);function r(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);